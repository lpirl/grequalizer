# Variables: $u: login name, $h: users home, $g: users primary group name

[main]
# where should a users home directory be found?
home_path = /home/student/$u
# if True, nothing will actually be done:
simulate = yes
# only check the homes for a certain group?
limit_to_primary_group = yes
# if so, whats its name?
primary_group_name = student
# if less than this number of users are found to check for, abort.
minimum_users_count = 100

# check if the directories for all users exist
[home_existence]
# if true, check is enabled:
check = yes
# if true, missing directories will be created:
correct = yes

# check if the permissions per directory are correct
[home_permissions]
# if true, check is enabled:
check = yes
# if true, wrong permissions will be overwritten with the right ones:
correct = yes
# desired permissions:
octal_permissions = 711

# check if the owner per directory is correct
[home_owner]
# if true, check is enabled:
check = yes
# if true, the owner will be set accordingly:
correct = yes
# this is the desired owner:
owner = $u

# check if the group per directory is correct:
[home_group]
# if true, check is enabled:
check = yes
# if true, the group will be set accordingly:
correct = yes
# this is the desired group:
group = $g

# check if there are directories not belonging to a user
[obsolete_homes]
# if true, check is enabled:
check = yes
# if true, obsolete directories will be packed and moved to trash
correct = yes
# this is where obsolete directories will be packed and moved to:
# (no suffix (ex. tar.gz) please)
trash_path = /home/student_trash
trash_octal_permissions = 000

# check if the home directories in passwd is set properly
[user_home]
# if true, check is enabled:
check = yes
# if true, wrongly set home directories in passwd will be corrected
correct = yes
# how should a users home directory be set
home_path = /home/student/$u

# check if the shell in passwd is set properly
[user_shell]
# if true, check is enabled:
check = yes
# if true, wrongly set shells in passwd will be corrected
correct = yes
# how should a users shell be set
shell = /usr/bin/zsh

# check if all listed files are present in each home
[home_files]
# if true, this check is enabled:
check = yes
# if true, copy missing files to the home
correct = yes
# a path to a file containing paths to files that should be present in
# each home. (Use of absolute paths is recommended.)
file_list = /home/student.files.txt

# check if all listed binaries and their required libraries are present
# in each home
[home_binaries_with_libs]
# if true, this check is enabled:
check = yes
# if true, copy missing binaries and librarires to the home
correct = yes
# a path to a file containing paths to binaries
# (Use of absolute paths is recommended.)
file_list = /home/student.binaries.txt

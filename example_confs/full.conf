# Variables: $u: login name, $h: users home, $g: users primary group name

[main]
# where should a users chroot directory be found?
chroot_path = /mnt/data/webhome/$u
# if True, nothing will actually be done:
simulate = yes
# only run the checks for a certain group?
limit_to_primary_group = yes
# if so, whats its name?
primary_group_name = students
# if less than this number of users are found to check for, abort.
minimum_users_count = 500

# check if the directories for all users exist
[chroot_existence]
# if true, check is enabled:
check = yes
# if true, missing directories will be created:
correct = yes

# check if the permissions per directory are correct
[chroot_permissions]
# if true, check is enabled:
check = yes
# if true, wrong permissions will be overwritten with the right ones:
correct = yes
# desired permissions:
octal_permissions = 711

# check if the owner per directory is correct
[chroot_owner]
# if true, check is enabled:
check = yes
# if true, the owner will be set accordingly:
correct = yes
# this is the desired owner:
owner = $u

# check if the group per directory is correct:
[chroot_group]
# if true, check is enabled:
check = yes
# if true, the group will be set accordingly:
correct = yes
# this is the desired group:
group = $g

# check if there are directories not belonging to a user
[obsolete_chroots]
# if true, check is enabled:
check = yes
# if true, obsolete directories will be packed and moved to trash
correct = yes
# this is where obsolete directories will be packed and moved to:
# (no suffix (ex. tar.gz) please)
trash_path = /mnt/data/webhome_trash
trash_octal_permissions = 000

# check if all listed files are present in each chroot
[chroot_files]
# if true, this check is enabled:
check = yes
# if true, copy missing files to the chroot
correct = yes
# a path to a file containing paths to files that should be present in
# each chroot. (Use of absolute paths is recommended.)
file_list = /mnt/data/webhome_files.txt
